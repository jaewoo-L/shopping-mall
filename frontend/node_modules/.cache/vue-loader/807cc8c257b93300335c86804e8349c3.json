{"remainingRequest":"C:\\Users\\gksmf\\shopping_mall(1)\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\gksmf\\shopping_mall(1)\\frontend\\src\\components\\users\\Management.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\gksmf\\shopping_mall(1)\\frontend\\src\\components\\users\\Management.vue","mtime":1591255798138},{"path":"C:\\Users\\gksmf\\shopping_mall(1)\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\gksmf\\shopping_mall(1)\\frontend\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\gksmf\\shopping_mall(1)\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\gksmf\\shopping_mall(1)\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\gksmf\\shopping_mall(1)\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport ManageModal from './ManagementModal'\r\nexport default {\r\n  data:function() {\r\n    return {\r\n      users:[],\r\n      modalUser:{},\r\n      modal:false,\r\n      search:'',\r\n      noMatch:null,\r\n      list: [],\r\n      current: null,\r\n      pages:null,\r\n      page:null,\r\n      sortProperty:{}\r\n    }\r\n  },\r\n  components: { ManageModal },\r\n  computed: {\r\n    auth(){\r\n      return this.$store.getters.isAuthenticated;\r\n    },\r\n    isAdmin() {\r\n      return this.$store.getters.isAdmin;\r\n    },\r\n    nowUsers() {\r\n      return this.users;\r\n    },\r\n    changelist() {\r\n      while (this.list.length) {\r\n        this.list.pop();\r\n      }\r\n      if(Number(this.current) < 6) {\r\n        for(var i= (Number(this.current) % 6 == 0 ? Number(this.current) : Number(this.current) - Number(this.current) % 6 + 1 ), j= i;   i <= (j + 4) && i <= this.pages; i++) this.list.push(i);\r\n        return this.list;\r\n      } else {\r\n        for(var i= (Number(this.current) % 6 == 0 ? Number(this.current) : Number(this.current) - Number(this.current) % 6), j= i; i <= (j + 5) && i <= this.pages; i++) this.list.push(i);\r\n        return this.list;\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    sortUser(option) {\r\n      let result;\r\n      //add new property\r\n      if(!this.sortProperty.hasOwnProperty(option)) {\r\n        this.sortProperty[option]=0;\r\n      }\r\n      for(let property in this.sortProperty) {\r\n        if(property == option) this.sortProperty[property]+=1;\r\n        else this.sortProperty[property]=0;\r\n      }\r\n      if(this.sortProperty[option]!=0 && this.sortProperty[option]%2==0) result=1;\r\n      else result=-1;\r\n      this.users.sort((a,b)=> {\r\n        let listA,listB;\r\n        listA = a[option];\r\n        listB = b[option];\r\n        if (listA < listB)return result;\r\n        if (listA > listB)return -result;\r\n        return 0;\r\n      });\r\n    },\r\n    openModal(idx) {\r\n      this.modal = true;\r\n      this.modalUser = this.users[idx];\r\n    },\r\n    closeModal() {\r\n      this.modal = false\r\n    },\r\n    deleteUser(idx) {\r\n      if(confirm('정말 추방 하시겠습니까?') == true) {\r\n        this.$http.delete('/api/login/' + this.users[idx]._id + '/myPage')\r\n        .then((response) => {\r\n          if(response.data.result == 'success') {\r\n            alert('삭제 되었습니다.');\r\n            this.users.splice(idx,1);\r\n          } else if(response.data.result == 'fail') {\r\n            alert('다시 시도해 주세요.')\r\n          }\r\n        })\r\n        .catch(error => {\r\n          alert(error)\r\n        })\r\n      }\r\n    },\r\n    searchUser: function() {\r\n      if(!this.search){\r\n        this.$http.get('/api/login/' + this.$store.getters.token +'/management?page=' + 1)\r\n        .then((response) => {\r\n              this.noMatch=false;\r\n              this.users = response.data.users;\r\n              this.current = response.data.current;\r\n              this.pages = response.data.pages;\r\n              this.page = response.data.page;\r\n              this.$store.dispatch('searchDelete')\r\n              localStorage.setItem(\"management\", 1);\r\n              this.$router.push('/management?page=' + 1);\r\n        })\r\n      }\r\n      else {\r\n          this.$http.get('/api/login/' + this.$store.getters.token +'/management?page=' + 1 + '&search=' + this.search)\r\n          .then((response) => {\r\n              if(response.data.noMatch) {\r\n                this.noMatch = response.data.noMatch;\r\n              }\r\n              else {\r\n                this.users = response.data.users;\r\n                this.current = response.data.current;\r\n                this.pages = response.data.pages;\r\n                this.page = response.data.page;\r\n                localStorage.setItem(\"management\", 1);\r\n                localStorage.setItem(\"searchUsers\", this.search);\r\n                this.$router.push('/management?page=' + 1 +'&search=' + this.search);\r\n              }\r\n          })\r\n      }\r\n    },\r\n\r\n    mipageUser: function() {\r\n      if(!this.search) {\r\n        this.$http.get('/api/login/' + this.$store.getters.token +'/management/?page=' + (Number(this.current) - 1))\r\n        .then((response) => {\r\n            this.users = response.data.users;\r\n            this.current = response.data.current;\r\n            this.pages = response.data.pages;\r\n            this.page = response.data.page;\r\n            localStorage.setItem(\"management\", this.current);\r\n            this.$router.push('/management?page=' + (Number(this.current)));\r\n        })\r\n      } else {\r\n        this.$http.get('/api/login/' + this.$store.getters.token +'/management/?page=' + (Number(this.current) - 1) + '&search=' + this.search)\r\n        .then((response) => {\r\n            this.users = response.data.users;\r\n            this.current = response.data.current;\r\n            this.pages = response.data.pages;\r\n            this.page = response.data.page;\r\n            localStorage.setItem(\"management\", this.current);\r\n            this.$router.push('/management?page=' + (Number(this.current)) + '&search=' + this.search);\r\n        })\r\n      }\r\n    },\r\n    numpageUser: function(i) {\r\n      if(!this.search){\r\n        this.$http.get('/api/login/' + this.$store.getters.token +'/management/?page=' + i)\r\n        .then((response) => {\r\n            this.users = response.data.users;\r\n            this.current = response.data.current;\r\n            this.pages = response.data.pages;\r\n            this.page = response.data.page;\r\n            localStorage.setItem(\"management\", this.current);\r\n            this.$router.push('/management?page=' + (Number(this.current)));\r\n        })\r\n      } else{\r\n        this.$http.get('/api/login/' + this.$store.getters.token +'/management/?page=' + i + '&search=' + this.search)\r\n        .then((response) => {\r\n            this.users = response.data.users;\r\n            this.current = response.data.current;\r\n            this.pages = response.data.pages;\r\n            this.page = response.data.page;\r\n            localStorage.setItem(\"management\", this.current);\r\n            this.$router.push('/management?page=' + (Number(this.current)) + '&search=' + this.search);\r\n        })\r\n      }\r\n    },\r\n    pluspageUser: function() {\r\n      if(!this.search){\r\n        this.$http.get('/api/login/' + this.$store.getters.token +'/management/?page='+(Number(this.current)+1))\r\n        .then((response) => {\r\n            this.users = response.data.users;\r\n            this.current = response.data.current;\r\n            this.pages = response.data.pages;\r\n            this.page = response.data.page;\r\n            localStorage.setItem(\"management\", this.current);\r\n            this.$router.push('/management?page=' + (Number(this.current)));\r\n        })\r\n      } else {\r\n        this.$http.get('/api/login/' + this.$store.getters.token +'/management/?page='+(Number(this.current)+1) + '&search=' + this.search)\r\n        .then((response) => {\r\n            this.users = response.data.users;\r\n            this.current = response.data.current;\r\n            this.pages = response.data.pages;\r\n            this.page = response.data.page;\r\n            localStorage.setItem(\"management\", this.current);\r\n            this.$router.push('/management?page=' + (Number(this.current)) + '&search=' + this.search);\r\n        })\r\n      }\r\n\r\n    }\r\n  },\r\n  created() {\r\n      this.search = this.$store.getters.searchUsers;\r\n      this.current = this.$store.getters.management;\r\n      if(!this.search) {\r\n        this.$http.get('/api/login/' + this.$store.getters.token +'/management/?page='+(Number(this.current)))\r\n        .then((response) => {\r\n          if(response.data.result == 'fail') {\r\n            alert('관리자가 아닙니다.')\r\n            this.$router.push('/');\r\n          } else {\r\n            this.users = response.data.users;\r\n            this.current = response.data.current;\r\n            this.pages = response.data.pages;\r\n            this.page = response.data.page;\r\n          }\r\n        })\r\n      } else {\r\n        this.$http.get('/api/login/' + this.$store.getters.token +'/management/?page='+(Number(this.current)) + '&search=' + this.search)\r\n        .then((response) => {\r\n          if(response.data.result == 'fail') {\r\n            alert('관리자가 아닙니다.')\r\n            this.$router.push('/');\r\n          } else {\r\n            this.users = response.data.users;\r\n            this.current = response.data.current;\r\n            this.pages = response.data.pages;\r\n            this.page = response.data.page;\r\n          }\r\n        })\r\n      }\r\n\r\n  }\r\n}\r\n",{"version":3,"sources":["Management.vue"],"names":[],"mappingsfile":"Management.vue","sourceRoot":"src/components/users","sourcesContent":["<template>\r\n  <div v-if=\"auth && isAdmin\" id=\"management\" class=\"container\">\r\n    <h1>회원관리</h1>\r\n    <div class=\"searchbox\">\r\n      <input v-model=\"search\" class=\"searchbar\" @keyup.enter=\"searchUser\" placeholder=\"유저검색\">\r\n      <button type=\"submit\" class=\"btn btn-default\" @click=\"searchUser\"><i class=\"fas fa-search\"></i></button>\r\n    </div>\r\n    <div class=\"section cboth\">\r\n      <div class=\"table-top\">\r\n        <div class=\"list w190\" @click=\"sortUser('username')\">E-Mail</div>\r\n        <div class=\"list w430\" @click=\"sortUser('jibunAddress')\">주소</div>\r\n        <div class=\"list w150\" @click=\"sortUser('phone_middle')\">Phone</div>\r\n        <div class=\"list w50\" @click=\"sortUser('age')\">나이</div>\r\n        <div class=\"list w50\">비고</div>\r\n      </div>\r\n      <div v-for=\"(user,idx) in nowUsers\" v-bind:key=\"idx._id\" class=\"table-list\" @click=\"openModal(idx)\">\r\n        <div class=\"list w190 pl-10\">{{user.username}}</div>\r\n\t\t\t\t<div class=\"list w430 pl-10\">({{user.postcode}}){{user.jibunAddress}} {{user.detailAddress}}</div>\r\n\t\t\t\t<div class=\"list w150 pl-10\">{{user.phone_first}}-{{user.phone_middle}}-{{user.phone_last}}</div>\r\n        <div class=\"list w50\">{{user.age}}</div>\r\n\t\t\t\t<div class=\"list w50\"><button class=\"btn btn-sm btn-danger\" @click.stop=\"deleteUser(idx)\">삭제</button> </div>\r\n      </div>\r\n    </div>\r\n\r\n    <ManageModal @close=\"closeModal\" v-if=\"modal\">\r\n      <!-- default 슬롯 콘텐츠 -->\r\n      <div class=\"myModal\">\r\n        <p>E-mail : {{modalUser.username}}</p>\r\n        <p>이름 : {{modalUser.lastName}}{{modalUser.firstName}}</p>\r\n        <p>나이 : {{modalUser.age}}</p>\r\n        <p>번호 : {{modalUser.phone_first}}-{{modalUser.phone_middle}}-{{modalUser.phone_last}}</p>\r\n        <p>성별 : {{modalUser.avatar}}</p>\r\n        <p>주소 : ({{modalUser.postcode}}){{modalUser.jibunAddress}}</p>\r\n        <p>       {{modalUser.detailAddress}}{{modalUser.extraAddress}}</p>\r\n      </div>\r\n      <!-- footer 슬롯 콘텐츠 -->\r\n      <template slot=\"footer\">\r\n        <button class=\"btn btn-primary\" @click=\"closeModal\">확인</button>\r\n      </template>\r\n    </ManageModal>\r\n    <div class=\"paging\" aria-label=\"Page navigation\">\r\n      <ul v-if=\"pages && pages > 0\" class=\"pagination justify-content-center\">\r\n        <div class=\"page-box\">\r\n          <li v-if=\"current == 1\" class=\"page-item\"><a class=\"page-link disabled\">«</a></li>\r\n          <li v-else><a class=\"page-link\" @click=\"mipageUser\" >«</a></li>\r\n        </div>\r\n        <div v-for=\"i in changelist\" class=\"page-box\">\r\n          <li v-if=\"i == current\"><a class=\"page-link active\">{{i}}</a></li>\r\n          <li v-else><a class=\"page-link\"  @click=\"numpageUser(i)\"> {{i}} </a></li>\r\n        </div>\r\n        <div class=\"page-box\">\r\n          <li v-if=\"current == pages\" class=\"page-item disabled\"><a class=\"page-link disabled\">»</a></li>\r\n          <li v-else><a class=\"page-link\" @click=\"pluspageUser\" style=\"cursor:pointer\">»</a></li>\r\n        </div>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport ManageModal from './ManagementModal'\r\nexport default {\r\n  data:function() {\r\n    return {\r\n      users:[],\r\n      modalUser:{},\r\n      modal:false,\r\n      search:'',\r\n      noMatch:null,\r\n      list: [],\r\n      current: null,\r\n      pages:null,\r\n      page:null,\r\n      sortProperty:{}\r\n    }\r\n  },\r\n  components: { ManageModal },\r\n  computed: {\r\n    auth(){\r\n      return this.$store.getters.isAuthenticated;\r\n    },\r\n    isAdmin() {\r\n      return this.$store.getters.isAdmin;\r\n    },\r\n    nowUsers() {\r\n      return this.users;\r\n    },\r\n    changelist() {\r\n      while (this.list.length) {\r\n        this.list.pop();\r\n      }\r\n      if(Number(this.current) < 6) {\r\n        for(var i= (Number(this.current) % 6 == 0 ? Number(this.current) : Number(this.current) - Number(this.current) % 6 + 1 ), j= i;   i <= (j + 4) && i <= this.pages; i++) this.list.push(i);\r\n        return this.list;\r\n      } else {\r\n        for(var i= (Number(this.current) % 6 == 0 ? Number(this.current) : Number(this.current) - Number(this.current) % 6), j= i; i <= (j + 5) && i <= this.pages; i++) this.list.push(i);\r\n        return this.list;\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    sortUser(option) {\r\n      let result;\r\n      //add new property\r\n      if(!this.sortProperty.hasOwnProperty(option)) {\r\n        this.sortProperty[option]=0;\r\n      }\r\n      for(let property in this.sortProperty) {\r\n        if(property == option) this.sortProperty[property]+=1;\r\n        else this.sortProperty[property]=0;\r\n      }\r\n      if(this.sortProperty[option]!=0 && this.sortProperty[option]%2==0) result=1;\r\n      else result=-1;\r\n      this.users.sort((a,b)=> {\r\n        let listA,listB;\r\n        listA = a[option];\r\n        listB = b[option];\r\n        if (listA < listB)return result;\r\n        if (listA > listB)return -result;\r\n        return 0;\r\n      });\r\n    },\r\n    openModal(idx) {\r\n      this.modal = true;\r\n      this.modalUser = this.users[idx];\r\n    },\r\n    closeModal() {\r\n      this.modal = false\r\n    },\r\n    deleteUser(idx) {\r\n      if(confirm('정말 추방 하시겠습니까?') == true) {\r\n        this.$http.delete('/api/login/' + this.users[idx]._id + '/myPage')\r\n        .then((response) => {\r\n          if(response.data.result == 'success') {\r\n            alert('삭제 되었습니다.');\r\n            this.users.splice(idx,1);\r\n          } else if(response.data.result == 'fail') {\r\n            alert('다시 시도해 주세요.')\r\n          }\r\n        })\r\n        .catch(error => {\r\n          alert(error)\r\n        })\r\n      }\r\n    },\r\n    searchUser: function() {\r\n      if(!this.search){\r\n        this.$http.get('/api/login/' + this.$store.getters.token +'/management?page=' + 1)\r\n        .then((response) => {\r\n              this.noMatch=false;\r\n              this.users = response.data.users;\r\n              this.current = response.data.current;\r\n              this.pages = response.data.pages;\r\n              this.page = response.data.page;\r\n              this.$store.dispatch('searchDelete')\r\n              localStorage.setItem(\"management\", 1);\r\n              this.$router.push('/management?page=' + 1);\r\n        })\r\n      }\r\n      else {\r\n          this.$http.get('/api/login/' + this.$store.getters.token +'/management?page=' + 1 + '&search=' + this.search)\r\n          .then((response) => {\r\n              if(response.data.noMatch) {\r\n                this.noMatch = response.data.noMatch;\r\n              }\r\n              else {\r\n                this.users = response.data.users;\r\n                this.current = response.data.current;\r\n                this.pages = response.data.pages;\r\n                this.page = response.data.page;\r\n                localStorage.setItem(\"management\", 1);\r\n                localStorage.setItem(\"searchUsers\", this.search);\r\n                this.$router.push('/management?page=' + 1 +'&search=' + this.search);\r\n              }\r\n          })\r\n      }\r\n    },\r\n\r\n    mipageUser: function() {\r\n      if(!this.search) {\r\n        this.$http.get('/api/login/' + this.$store.getters.token +'/management/?page=' + (Number(this.current) - 1))\r\n        .then((response) => {\r\n            this.users = response.data.users;\r\n            this.current = response.data.current;\r\n            this.pages = response.data.pages;\r\n            this.page = response.data.page;\r\n            localStorage.setItem(\"management\", this.current);\r\n            this.$router.push('/management?page=' + (Number(this.current)));\r\n        })\r\n      } else {\r\n        this.$http.get('/api/login/' + this.$store.getters.token +'/management/?page=' + (Number(this.current) - 1) + '&search=' + this.search)\r\n        .then((response) => {\r\n            this.users = response.data.users;\r\n            this.current = response.data.current;\r\n            this.pages = response.data.pages;\r\n            this.page = response.data.page;\r\n            localStorage.setItem(\"management\", this.current);\r\n            this.$router.push('/management?page=' + (Number(this.current)) + '&search=' + this.search);\r\n        })\r\n      }\r\n    },\r\n    numpageUser: function(i) {\r\n      if(!this.search){\r\n        this.$http.get('/api/login/' + this.$store.getters.token +'/management/?page=' + i)\r\n        .then((response) => {\r\n            this.users = response.data.users;\r\n            this.current = response.data.current;\r\n            this.pages = response.data.pages;\r\n            this.page = response.data.page;\r\n            localStorage.setItem(\"management\", this.current);\r\n            this.$router.push('/management?page=' + (Number(this.current)));\r\n        })\r\n      } else{\r\n        this.$http.get('/api/login/' + this.$store.getters.token +'/management/?page=' + i + '&search=' + this.search)\r\n        .then((response) => {\r\n            this.users = response.data.users;\r\n            this.current = response.data.current;\r\n            this.pages = response.data.pages;\r\n            this.page = response.data.page;\r\n            localStorage.setItem(\"management\", this.current);\r\n            this.$router.push('/management?page=' + (Number(this.current)) + '&search=' + this.search);\r\n        })\r\n      }\r\n    },\r\n    pluspageUser: function() {\r\n      if(!this.search){\r\n        this.$http.get('/api/login/' + this.$store.getters.token +'/management/?page='+(Number(this.current)+1))\r\n        .then((response) => {\r\n            this.users = response.data.users;\r\n            this.current = response.data.current;\r\n            this.pages = response.data.pages;\r\n            this.page = response.data.page;\r\n            localStorage.setItem(\"management\", this.current);\r\n            this.$router.push('/management?page=' + (Number(this.current)));\r\n        })\r\n      } else {\r\n        this.$http.get('/api/login/' + this.$store.getters.token +'/management/?page='+(Number(this.current)+1) + '&search=' + this.search)\r\n        .then((response) => {\r\n            this.users = response.data.users;\r\n            this.current = response.data.current;\r\n            this.pages = response.data.pages;\r\n            this.page = response.data.page;\r\n            localStorage.setItem(\"management\", this.current);\r\n            this.$router.push('/management?page=' + (Number(this.current)) + '&search=' + this.search);\r\n        })\r\n      }\r\n\r\n    }\r\n  },\r\n  created() {\r\n      this.search = this.$store.getters.searchUsers;\r\n      this.current = this.$store.getters.management;\r\n      if(!this.search) {\r\n        this.$http.get('/api/login/' + this.$store.getters.token +'/management/?page='+(Number(this.current)))\r\n        .then((response) => {\r\n          if(response.data.result == 'fail') {\r\n            alert('관리자가 아닙니다.')\r\n            this.$router.push('/');\r\n          } else {\r\n            this.users = response.data.users;\r\n            this.current = response.data.current;\r\n            this.pages = response.data.pages;\r\n            this.page = response.data.page;\r\n          }\r\n        })\r\n      } else {\r\n        this.$http.get('/api/login/' + this.$store.getters.token +'/management/?page='+(Number(this.current)) + '&search=' + this.search)\r\n        .then((response) => {\r\n          if(response.data.result == 'fail') {\r\n            alert('관리자가 아닙니다.')\r\n            this.$router.push('/');\r\n          } else {\r\n            this.users = response.data.users;\r\n            this.current = response.data.current;\r\n            this.pages = response.data.pages;\r\n            this.page = response.data.page;\r\n          }\r\n        })\r\n      }\r\n\r\n  }\r\n}\r\n</script>\r\n\r\n<style src=\"../../../public/stylesheets/management.css\">\r\n\r\n</style>\r\n"]}]}