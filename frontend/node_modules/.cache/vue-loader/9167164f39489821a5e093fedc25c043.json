{"remainingRequest":"C:\\Users\\gksmf\\shopping_mall\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\gksmf\\shopping_mall\\frontend\\src\\components\\products\\DetailsPage.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"C:\\Users\\gksmf\\shopping_mall\\frontend\\src\\components\\products\\DetailsPage.vue","mtime":1571122487557},{"path":"C:\\Users\\gksmf\\shopping_mall\\frontend\\node_modules\\css-loader\\index.js","mtime":499162500000},{"path":"C:\\Users\\gksmf\\shopping_mall\\frontend\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\gksmf\\shopping_mall\\frontend\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\gksmf\\shopping_mall\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\gksmf\\shopping_mall\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.likeBtn {\n\tbackground: blue;\n\tcolor: white;\n}\n",{"version":3,"sources":["DetailsPage.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkIA;AACA;AACA;AACA","file":"DetailsPage.vue","sourceRoot":"src/components/products","sourcesContent":["<template>\r\n  <div>\r\n    <h1>Details page</h1>\r\n    <button v-if=\"isAdmin\" @click=\"editProduct\">수정</button>\r\n    <button v-if=\"isAdmin\" @click=\"deleteProduct\">삭제</button>\r\n    <hr>\r\n    <p>{{product.name}}</p>\r\n    <img v-bind:src=\"product.detailed_image\">\r\n   \r\n    <p>{{product.price}}￦</p>\r\n    <button :disabled=\"!token\" @click=\"likeProduct\" :class=\"{likeBtn: istrue}\">like({{likes.length}})</button>\r\n    <button :disabled=\"!token\" @click=\"basketProduct\">장바구니 담기</button>\r\n\r\n\r\n    <button :disabled=\"!token\" @click=\"createComment\">후기 작성</button>\r\n    <div v-for=\"comment in product.comments\">\r\n      <p>{{comment.author.nickname}}</p>\r\n      <p>{{comment.text}}</p>\r\n              \r\n        <button v-if=\"comment.author.id == token\" @click=\"editComment(comment)\">수정</button>\r\n        <button v-if=\"comment.author.id == token\" @click=\"deleteComment(comment)\">삭제</button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n\tdata: function () {\r\n\t    return {\r\n\t      product: {},\r\n\t      likes: [],\r\n        basket: [],\r\n\t      istrue: null,\r\n\t    }\r\n\t},\r\n\tcomputed: {\r\n    \tisAdmin() {\r\n          console.log('isAmin 변경');\r\n          console.log(this.$store.getters.isAdmin);\r\n      \t\treturn this.$store.getters.isAdmin;\r\n    \t},\r\n    \ttoken() {\r\n    \t\treturn this.$store.getters.token;\r\n    \t}\r\n  },\r\n  \tmethods: {\r\n  \t\teditProduct() {\r\n        this.$router.push('/products/' + this.$route.params.id + '/edit');\r\n  \t\t},\r\n  \t\tdeleteProduct() {\r\n        this.$http.delete('/api/products/' + this.$route.params.id)\r\n        .then((response) => {\r\n          if(response.data.result == 'success') {\r\n            alert('삭제 성공했습니다.');\r\n            this.$router.push('/products');\r\n          } else if(response.data.result == 'fail') {\r\n            alert('삭제 실패했습니다.')\r\n          }\r\n        })\r\n        .catch(error => {\r\n          alert(error)\r\n        })\r\n  \t\t},\r\n  \t\tlikeProduct() {\r\n  \t\t\tthis.$http.post('/api/products/' + this.$route.params.id + '/like', {userid: this.$store.getters.token})\r\n  \t\t\t.then((response) => {\r\n  \t\t\t\tthis.likes = response.data;\r\n  \t\t\t\t//let token = this.token;\r\n  \t\t\t\tthis.istrue = !this.istrue;\r\n  \t\t\t\tconsole.log(this.likes);\r\n  \t\t\t\t//console.log(token);\r\n  \t\t\t})\r\n  \t\t},\r\n      basketProduct() {\r\n        this.$http.post('/api/login/' + this.$route.params.id + '/basket', {userid: this.$store.getters.token})\r\n        .then((response) => {\r\n          for(var i in response.data){\r\n            if(response.data[i] == this.$route.params.id) {\r\n              alert(\"장바구니에 추가합니다.\");\r\n              return;\r\n            }\r\n          }\r\n          alert(\"장바구니에서 삭제합니다.\");\r\n          \r\n        })\r\n      },\r\n      createComment() {\r\n        this.$router.push('/products/' + this.$route.params.id + '/comments/new');\r\n      },\r\n      editComment(comment) {\r\n        this.$router.push('/products/' + this.$route.params.id + '/comments/' + comment._id +'/edit')\r\n      },\r\n\r\n      deleteComment(comment) {\r\n        let id = this.$route.params.id;\r\n        this.$http.delete('/api/products/'+ this.$route.params.id + '/comments/' + comment._id)\r\n        .then((response) => {\r\n          if(response.data.result == 'success') {\r\n            alert('삭제 성공했습니다.');\r\n            this.$router.push('/products');\r\n          } else if(response.data.result == 'fail') {\r\n            alert('삭제 실패했습니다.')\r\n          }\r\n        })\r\n        .catch(error => {\r\n          alert(error)\r\n        })\r\n      }\r\n  \t},\r\n  \tcreated() {\r\n  \t\tthis.$http.get('/api/products/'+ this.$route.params.id)\r\n  \t\t.then((response) => {\r\n  \t\t\tthis.product = response.data;\r\n  \t\t\tthis.likes = response.data.likes;\r\n  \t\t\tconsole.log(response.data);\r\n  \t\t\tfor(var i in response.data.likes) {\r\n  \t\t\t\tif(response.data.likes[i]._id == this.$store.getters.token) {\r\n  \t\t\t\t\tthis.istrue = true;\r\n  \t\t\t\t}\r\n  \t\t\t\telse {\r\n  \t\t\t\t\tthis.istrue = false;\r\n  \t\t\t\t}\r\n  \t\t\t\t\r\n  \t\t\t}\r\n  \t\t})\r\n  \t}\r\n}\r\n</script>\r\n\r\n<style>\r\n\t.likeBtn {\r\n\t\tbackground: blue;\r\n\t\tcolor: white;\r\n\t}\r\n</style>"]}]}