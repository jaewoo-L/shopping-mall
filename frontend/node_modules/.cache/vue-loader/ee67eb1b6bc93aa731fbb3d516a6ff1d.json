{"remainingRequest":"C:\\Users\\gksmf\\shopping_mall\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\gksmf\\shopping_mall\\frontend\\src\\components\\login\\ResetPage.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\gksmf\\shopping_mall\\frontend\\src\\components\\login\\ResetPage.vue","mtime":1572259173670},{"path":"C:\\Users\\gksmf\\shopping_mall\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\gksmf\\shopping_mall\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\gksmf\\shopping_mall\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\gksmf\\shopping_mall\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport {required, minLength, maxLength ,sameAs} from 'vuelidate/lib/validators'\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      password:'',\r\n      confirmPassword:''\r\n    }\r\n  },\r\n  validations: {\r\n    password: {\r\n        required,\r\n        minLength: minLength(6),\r\n        maxLength: maxLength(15)\r\n      },\r\n      confirmPassword: {\r\n        sameAs: sameAs('password')\r\n      }\r\n  },\r\n  methods: {\r\n    updatePassword: function() {\r\n      this.$http.post('/api/login/reset/' + this.$route.params.token, {password: this.password})\r\n      .then((response) => {\r\n        alert(response.data.result);\r\n        this.$router.push('/');\r\n      })\r\n    }\r\n  }\r\n}\r\n",{"version":3,"sources":["ResetPage.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoCA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ResetPage.vue","sourceRoot":"src/components/login","sourcesContent":["<template>\r\n  <div id=\"reset\">\r\n    <div class=\"reset-box\">\r\n      <h1>Reset Password</h1>\r\n        <div class=\"text-box\" :class=\"{invalid: $v.password.$error}\">\r\n          <label for=\"password\">변경할 비밀번호 : </label>\r\n          <input \r\n                          id=\"password\"\r\n                          name=\"password\" \r\n                          type=\"password\"\r\n                          @blur=\"$v.password.$touch()\" \r\n                          v-model=\"password\" \r\n                          placeholder=\"Password\"> \r\n          <p v-if=\"$v.password.$error\">최소 6자 이상 최대 15자 이하로 작성하세요.</p>\r\n        </div> \r\n                      \r\n        <div class=\"text-box\" :class=\"{invalid: $v.confirmPassword.$error}\">\r\n          <label for=\"confirm-password\">비밀번호확인 : </label>\r\n          <input \r\n                              id=\"confirm-password\"\r\n                              name=\"confirmPassword\" \r\n                              type=\"password\"  \r\n                              @blur=\"$v.confirmPassword.$touch()\" \r\n                              v-model=\"confirmPassword\" \r\n                              placeholder=\"ConfirmPassword\">\r\n          <p v-if=\"$v.confirmPassword.$error\">패스워드가 일치하지 않습니다.</p>\r\n        </div>      \r\n        \r\n      <div class=\"submit\">\r\n          <button class=\"btn\" @click=\"updatePassword\" :disabled=\"$v.$invalid\">비밀번호 변경</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport {required, minLength, maxLength ,sameAs} from 'vuelidate/lib/validators'\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      password:'',\r\n      confirmPassword:''\r\n    }\r\n  },\r\n  validations: {\r\n    password: {\r\n        required,\r\n        minLength: minLength(6),\r\n        maxLength: maxLength(15)\r\n      },\r\n      confirmPassword: {\r\n        sameAs: sameAs('password')\r\n      }\r\n  },\r\n  methods: {\r\n    updatePassword: function() {\r\n      this.$http.post('/api/login/reset/' + this.$route.params.token, {password: this.password})\r\n      .then((response) => {\r\n        alert(response.data.result);\r\n        this.$router.push('/');\r\n      })\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style src=\"../../../public/stylesheets/login.css\">\r\n</style>"]}]}