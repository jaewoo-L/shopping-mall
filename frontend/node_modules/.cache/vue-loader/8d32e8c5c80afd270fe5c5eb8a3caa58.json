{"remainingRequest":"C:\\Users\\gksmf\\shopping_mall\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\gksmf\\shopping_mall\\frontend\\src\\components\\users\\MyPage.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\gksmf\\shopping_mall\\frontend\\src\\components\\users\\MyPage.vue","mtime":1572946307839},{"path":"C:\\Users\\gksmf\\shopping_mall\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\gksmf\\shopping_mall\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\gksmf\\shopping_mall\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\gksmf\\shopping_mall\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      myInfo: {}\r\n    }\r\n  },\r\n  methods: {\r\n    editUser() {\r\n      this.$router.push('/' + this.$route.params.id + '/myPage/edit')\r\n    },\r\n    deleteComments() {\r\n      if(confirm('정말 삭제 하시겠습니까?') == true) {\r\n        this.$http.delete('/api/login/' + this.$route.params.id + '/myPage/comments')\r\n        .then((response) => {\r\n          if(response.data.result == 'success') {\r\n            alert('작성한 댓글이 모두 삭제되었습니다.');\r\n          } else if(response.data.result == 'fail') {\r\n            alert('다시 시도해 주세요.');\r\n          }\r\n        })\r\n        .catch(error => {\r\n          alert(error)\r\n        })\r\n      }  \r\n    },\r\n    deleteUser() {\r\n      if(confirm('정말 탈퇴 하시겠습니까?') == true) {\r\n        this.$http.delete('/api/login/' + this.$route.params.id + '/myPage')\r\n        .then((response) => {\r\n          if(response.data.result == 'success') {\r\n            alert('그동안 고마웠습니다. 다시 방문해주세요.');\r\n            this.$store.dispatch('logout');\r\n            this.$router.push('/login');\r\n          } else if(response.data.result == 'fail') {\r\n            alert('다시 시도해 주세요.')\r\n          }\r\n        })\r\n        .catch(error => {\r\n          alert(error)\r\n        })\r\n      }  \r\n    }\r\n  },\r\n  created() {\r\n    this.$http.get('/api/login/' + this.$route.params.id + '/myPage')\r\n    .then((response) => {\r\n      this.myInfo = response.data;\r\n    })\r\n    this.$store.dispatch('tryAutoLogin')\r\n      .then((response) => {\r\n\r\n      });\r\n  }\r\n}\r\n",{"version":3,"sources":["MyPage.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAqBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"MyPage.vue","sourceRoot":"src/components/users","sourcesContent":["<template>\r\n  <div id=\"myPage\" class=\"container\">\r\n    <div class=\"myPage-box\">\r\n      <h1>나의 정보</h1>\r\n      <div class=\"information\">\r\n        <p><strong>이름: </strong>{{myInfo.lastName}}{{myInfo.firstName}}</p>\r\n        <p><strong>닉네임: </strong>{{myInfo.nickname}}</p>\r\n        <p><strong>나이: </strong>{{myInfo.age}}</p>\r\n        <p><strong>주소: </strong>{{myInfo.roadAddress}}  ({{myInfo.postcode}})</p>\r\n        <p><strong>상세주소: </strong>{{myInfo.detailAddress}}</p>\r\n        <p><strong>핸드폰:</strong> {{myInfo.phone_first}}-{{myInfo.phone_middle}}-{{myInfo.phone_last}}</p>\r\n      </div>\r\n\r\n      <button @click=\"editUser\" class=\"btn btn-default editUser\">개인정보 변경</button>\r\n      <button @click=\"deleteComments\" class=\"btn btn-default deleteComments\">작성 댓글 모두 삭제</button>\r\n      <button @click=\"deleteUser\" class=\"btn btn-default deleteUser\">회원탈퇴</button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      myInfo: {}\r\n    }\r\n  },\r\n  methods: {\r\n    editUser() {\r\n      this.$router.push('/' + this.$route.params.id + '/myPage/edit')\r\n    },\r\n    deleteComments() {\r\n      if(confirm('정말 삭제 하시겠습니까?') == true) {\r\n        this.$http.delete('/api/login/' + this.$route.params.id + '/myPage/comments')\r\n        .then((response) => {\r\n          if(response.data.result == 'success') {\r\n            alert('작성한 댓글이 모두 삭제되었습니다.');\r\n          } else if(response.data.result == 'fail') {\r\n            alert('다시 시도해 주세요.');\r\n          }\r\n        })\r\n        .catch(error => {\r\n          alert(error)\r\n        })\r\n      }  \r\n    },\r\n    deleteUser() {\r\n      if(confirm('정말 탈퇴 하시겠습니까?') == true) {\r\n        this.$http.delete('/api/login/' + this.$route.params.id + '/myPage')\r\n        .then((response) => {\r\n          if(response.data.result == 'success') {\r\n            alert('그동안 고마웠습니다. 다시 방문해주세요.');\r\n            this.$store.dispatch('logout');\r\n            this.$router.push('/login');\r\n          } else if(response.data.result == 'fail') {\r\n            alert('다시 시도해 주세요.')\r\n          }\r\n        })\r\n        .catch(error => {\r\n          alert(error)\r\n        })\r\n      }  \r\n    }\r\n  },\r\n  created() {\r\n    this.$http.get('/api/login/' + this.$route.params.id + '/myPage')\r\n    .then((response) => {\r\n      this.myInfo = response.data;\r\n    })\r\n    this.$store.dispatch('tryAutoLogin')\r\n      .then((response) => {\r\n\r\n      });\r\n  }\r\n}\r\n</script>\r\n\r\n<style src=\"../../../public/stylesheets/user.css\">\r\n</style>\r\n"]}]}