{"remainingRequest":"C:\\Users\\gksmf\\shopping_mall(1)\\frontend\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\gksmf\\shopping_mall(1)\\frontend\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\gksmf\\shopping_mall(1)\\frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\gksmf\\shopping_mall(1)\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\gksmf\\shopping_mall(1)\\frontend\\src\\components\\users\\MyPage.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\gksmf\\shopping_mall(1)\\frontend\\src\\components\\users\\MyPage.vue","mtime":1591057558697},{"path":"C:\\Users\\gksmf\\shopping_mall(1)\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\gksmf\\shopping_mall(1)\\frontend\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\gksmf\\shopping_mall(1)\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\gksmf\\shopping_mall(1)\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\gksmf\\shopping_mall(1)\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  data: function data() {\n    return {\n      myInfo: {}\n    };\n  },\n  computed: {\n    auth: function auth() {\n      return this.$store.getters.isAuthenticated;\n    },\n    isAdmin: function isAdmin() {\n      return this.$store.getters.isAdmin;\n    }\n  },\n  methods: {\n    management: function management() {\n      this.$router.push('/management');\n    },\n    editUser: function editUser() {\n      this.$router.push('/' + this.$route.params.id + '/myPage/edit');\n    },\n    deleteComments: function deleteComments() {\n      if (confirm('정말 삭제 하시겠습니까?') == true) {\n        this.$http.delete('/api/login/' + this.$route.params.id + '/myPage/comments').then(function (response) {\n          if (response.data.result == 'success') {\n            alert('작성한 댓글이 모두 삭제되었습니다.');\n          } else if (response.data.result == 'fail') {\n            alert('다시 시도해 주세요.');\n          }\n        }).catch(function (error) {\n          alert(error);\n        });\n      }\n    },\n    deleteUser: function deleteUser() {\n      var _this = this;\n\n      if (confirm('정말 탈퇴 하시겠습니까?') == true) {\n        this.$http.delete('/api/login/' + this.$route.params.id + '/myPage').then(function (response) {\n          if (response.data.result == 'success') {\n            alert('그동안 고마웠습니다. 다시 방문해주세요.');\n\n            _this.$store.dispatch('logout');\n\n            _this.$router.push('/login');\n          } else if (response.data.result == 'fail') {\n            alert('다시 시도해 주세요.');\n          }\n        }).catch(function (error) {\n          alert(error);\n        });\n      }\n    }\n  },\n  created: function created() {\n    var _this2 = this;\n\n    this.$http.get('/api/login/' + this.$route.params.id + '/myPage').then(function (response) {\n      _this2.myInfo = response.data;\n    });\n    this.$store.dispatch('tryAutoLogin').then(function (response) {});\n  }\n};",{"version":3,"sources":["MyPage.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAqBA,eAAA;AACA,EAAA,IADA,kBACA;AACA,WAAA;AACA,MAAA,MAAA,EAAA;AADA,KAAA;AAGA,GALA;AAMA,EAAA,QAAA,EAAA;AACA,IAAA,IADA,kBACA;AACA,aAAA,KAAA,MAAA,CAAA,OAAA,CAAA,eAAA;AACA,KAHA;AAIA,IAAA,OAJA,qBAIA;AACA,aAAA,KAAA,MAAA,CAAA,OAAA,CAAA,OAAA;AACA;AANA,GANA;AAcA,EAAA,OAAA,EAAA;AACA,IAAA,UADA,wBACA;AACA,WAAA,OAAA,CAAA,IAAA,CAAA,aAAA;AACA,KAHA;AAIA,IAAA,QAJA,sBAIA;AACA,WAAA,OAAA,CAAA,IAAA,CAAA,MAAA,KAAA,MAAA,CAAA,MAAA,CAAA,EAAA,GAAA,cAAA;AACA,KANA;AAOA,IAAA,cAPA,4BAOA;AACA,UAAA,OAAA,CAAA,eAAA,CAAA,IAAA,IAAA,EAAA;AACA,aAAA,KAAA,CAAA,MAAA,CAAA,gBAAA,KAAA,MAAA,CAAA,MAAA,CAAA,EAAA,GAAA,kBAAA,EACA,IADA,CACA,UAAA,QAAA,EAAA;AACA,cAAA,QAAA,CAAA,IAAA,CAAA,MAAA,IAAA,SAAA,EAAA;AACA,YAAA,KAAA,CAAA,qBAAA,CAAA;AACA,WAFA,MAEA,IAAA,QAAA,CAAA,IAAA,CAAA,MAAA,IAAA,MAAA,EAAA;AACA,YAAA,KAAA,CAAA,aAAA,CAAA;AACA;AACA,SAPA,EAQA,KARA,CAQA,UAAA,KAAA,EAAA;AACA,UAAA,KAAA,CAAA,KAAA,CAAA;AACA,SAVA;AAWA;AACA,KArBA;AAsBA,IAAA,UAtBA,wBAsBA;AAAA;;AACA,UAAA,OAAA,CAAA,eAAA,CAAA,IAAA,IAAA,EAAA;AACA,aAAA,KAAA,CAAA,MAAA,CAAA,gBAAA,KAAA,MAAA,CAAA,MAAA,CAAA,EAAA,GAAA,SAAA,EACA,IADA,CACA,UAAA,QAAA,EAAA;AACA,cAAA,QAAA,CAAA,IAAA,CAAA,MAAA,IAAA,SAAA,EAAA;AACA,YAAA,KAAA,CAAA,wBAAA,CAAA;;AACA,YAAA,KAAA,CAAA,MAAA,CAAA,QAAA,CAAA,QAAA;;AACA,YAAA,KAAA,CAAA,OAAA,CAAA,IAAA,CAAA,QAAA;AACA,WAJA,MAIA,IAAA,QAAA,CAAA,IAAA,CAAA,MAAA,IAAA,MAAA,EAAA;AACA,YAAA,KAAA,CAAA,aAAA,CAAA;AACA;AACA,SATA,EAUA,KAVA,CAUA,UAAA,KAAA,EAAA;AACA,UAAA,KAAA,CAAA,KAAA,CAAA;AACA,SAZA;AAaA;AACA;AAtCA,GAdA;AAsDA,EAAA,OAtDA,qBAsDA;AAAA;;AACA,SAAA,KAAA,CAAA,GAAA,CAAA,gBAAA,KAAA,MAAA,CAAA,MAAA,CAAA,EAAA,GAAA,SAAA,EACA,IADA,CACA,UAAA,QAAA,EAAA;AACA,MAAA,MAAA,CAAA,MAAA,GAAA,QAAA,CAAA,IAAA;AACA,KAHA;AAIA,SAAA,MAAA,CAAA,QAAA,CAAA,cAAA,EACA,IADA,CACA,UAAA,QAAA,EAAA,CAEA,CAHA;AAIA;AA/DA,CAAA","sourcesContent":["<template>\r\n  <div id=\"myPage\" class=\"container\">\r\n    <div class=\"myPage-box\">\r\n      <h1>나의 정보</h1>\r\n      <div class=\"information\">\r\n        <p><strong>이름: </strong>{{myInfo.lastName}}{{myInfo.firstName}}</p>\r\n        <p><strong>닉네임: </strong>{{myInfo.nickname}}</p>\r\n        <p><strong>나이: </strong>{{myInfo.age}}</p>\r\n        <p><strong>주소: </strong>{{myInfo.roadAddress}}  ({{myInfo.postcode}})</p>\r\n        <p><strong>상세주소: </strong>{{myInfo.detailAddress}}</p>\r\n        <p><strong>핸드폰:</strong> {{myInfo.phone_first}}-{{myInfo.phone_middle}}-{{myInfo.phone_last}}</p>\r\n      </div>\r\n      <button v-if=\"auth && isAdmin\" @click=\"management\" class=\"btn btn-default editUser\">회원관리</button>\r\n      <button @click=\"editUser\" class=\"btn btn-default editUser\">개인정보 변경</button>\r\n      <button @click=\"deleteComments\" class=\"btn btn-default deleteComments\">작성 댓글 모두 삭제</button>\r\n      <button @click=\"deleteUser\" class=\"btn btn-default deleteUser\">회원탈퇴</button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      myInfo: {}\r\n    }\r\n  },\r\n  computed: {\r\n    auth(){\r\n      return this.$store.getters.isAuthenticated;\r\n    },\r\n    isAdmin() {\r\n      return this.$store.getters.isAdmin;\r\n    }\r\n  },\r\n  methods: {\r\n    management() {\r\n      this.$router.push('/management');\r\n    },\r\n    editUser() {\r\n      this.$router.push('/' + this.$route.params.id + '/myPage/edit')\r\n    },\r\n    deleteComments() {\r\n      if(confirm('정말 삭제 하시겠습니까?') == true) {\r\n        this.$http.delete('/api/login/' + this.$route.params.id + '/myPage/comments')\r\n        .then((response) => {\r\n          if(response.data.result == 'success') {\r\n            alert('작성한 댓글이 모두 삭제되었습니다.');\r\n          } else if(response.data.result == 'fail') {\r\n            alert('다시 시도해 주세요.');\r\n          }\r\n        })\r\n        .catch(error => {\r\n          alert(error)\r\n        })\r\n      }\r\n    },\r\n    deleteUser() {\r\n      if(confirm('정말 탈퇴 하시겠습니까?') == true) {\r\n        this.$http.delete('/api/login/' + this.$route.params.id + '/myPage')\r\n        .then((response) => {\r\n          if(response.data.result == 'success') {\r\n            alert('그동안 고마웠습니다. 다시 방문해주세요.');\r\n            this.$store.dispatch('logout');\r\n            this.$router.push('/login');\r\n          } else if(response.data.result == 'fail') {\r\n            alert('다시 시도해 주세요.')\r\n          }\r\n        })\r\n        .catch(error => {\r\n          alert(error)\r\n        })\r\n      }\r\n    }\r\n  },\r\n  created() {\r\n    this.$http.get('/api/login/' + this.$route.params.id + '/myPage')\r\n    .then((response) => {\r\n      this.myInfo = response.data;\r\n    })\r\n    this.$store.dispatch('tryAutoLogin')\r\n      .then((response) => {\r\n\r\n      });\r\n  }\r\n}\r\n</script>\r\n\r\n<style src=\"../../../public/stylesheets/user.css\">\r\n</style>\r\n"],"sourceRoot":"src/components/users"}]}